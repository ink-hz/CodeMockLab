version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: codemocklab-postgres
    environment:
      POSTGRES_DB: codemocklab
      POSTGRES_USER: codemocklab
      POSTGRES_PASSWORD: codemocklab_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - codemocklab-network
    restart: unless-stopped

  # Redis 缓存 (可选)
  redis:
    image: redis:7-alpine
    container_name: codemocklab-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - codemocklab-network
    restart: unless-stopped

  # CodeMockLab 应用
  app:
    build: .
    container_name: codemocklab-app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://codemocklab:codemocklab_password@postgres:5432/codemocklab
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-key
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - codemocklab-network
    restart: unless-stopped
    volumes:
      - app_uploads:/app/uploads

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: codemocklab-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - codemocklab-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  codemocklab-network:
    driver: bridge